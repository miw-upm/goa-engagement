services:

  postgres:
    image: postgres:15.10
    container_name: postgres-server
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: devops
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - goa

  mongo:
    image: mongodb/mongodb-community-server:7.0.16-ubuntu2204
    container_name: mongo-server
    restart: always
    environment:
      MONGODB_INITDB_ROOT_USERNAME: mongo
      MONGODB_INITDB_ROOT_PASSWORD: mongo
      MONGODB_INITDB_DATABASE: devops
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - goa

volumes:
  postgres_data:
    name: "postgres-data"
  mongo_data:
    name: "mongo-data"
  mongo_config:
    name: "mongo-config"

networks:
  goa:
    external: true

# Construir todas las BD
#> docker compose -f docker-compose-db.yml -p databases up -d

# CONSOLA & COMANDOS Postgres
#> docker exec -it postgres-server  psql -U postgres
#  \?   Help
#  \l   Database list
#  \connect <db> <usr>
#  \dt   Table list
#  \d <table> ;  describe
#  \q   exit
#  create database <db>;
#  drop database <db>;
#  select * from <table>;
#  delete from <table>;

# CONSOLA & COMANDOS mongo
#> docker exec -it mongo-server mongosh "mongodb://mongo:mongo@localhost:27017/goaengagement?authSource=admin"
#  help
#  db.version()
#  db.stats()
#  show databases
#  use <myBD>
#  show collections
#  db.dropDatabase()
#  db.coll1.drop()
#  db.coll1.find()
#  db.coll1.find().pretty()
#  db.coll1.count()
